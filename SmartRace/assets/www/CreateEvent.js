/*
 * JS for CreateEvent generated by Appery.io
 *
 */

Appery.getProjectGUID = function() {
    return '6babc941-f486-4f8b-aee7-a0ac33c74d72';
}

function navigateTo(outcome, useAjax) {
    Appery.navigateTo(outcome, useAjax);
}

// Deprecated


function adjustContentHeight() {
    Appery.adjustContentHeightWithPadding();
}

function adjustContentHeightWithPadding(_page) {
    Appery.adjustContentHeightWithPadding(_page);
}

function setDetailContent(pageUrl) {
    Appery.setDetailContent(pageUrl);
}

Appery.AppPages = [{
    "name": "RaceEventScreen",
    "location": "RaceEventScreen.html"
}, {
    "name": "Delete",
    "location": "Delete.html"
}, {
    "name": "EventJoinSuccess",
    "location": "EventJoinSuccess.html"
}, {
    "name": "FacebookPublishing_NewFeed",
    "location": "FacebookPublishing_NewFeed.html"
}, {
    "name": "PopupSDGE",
    "location": "PopupSDGE.html"
}, {
    "name": "FirstScreen",
    "location": "FirstScreen.html"
}, {
    "name": "AboutSDGEandATnT",
    "location": "AboutSDGEandATnT.html"
}, {
    "name": "CrowRacing",
    "location": "CrowRacing.html"
}, {
    "name": "ATT",
    "location": "ATT.html"
}, {
    "name": "ScoreBoard",
    "location": "ScoreBoard.html"
}, {
    "name": "CloseEventCreation",
    "location": "CloseEventCreation.html"
}, {
    "name": "CreateEvent",
    "location": "CreateEvent.html"
}, {
    "name": "GreenButtonDataPage",
    "location": "GreenButtonDataPage.html"
}, {
    "name": "WelcomeScreen",
    "location": "WelcomeScreen.html"
}];

CreateEvent_js = function(runBeforeShow) { /* Object & array with components "name-to-id" mapping */
    var n2id_buf = {
        'mobilebutton_12': 'CreateEvent_mobilebutton_12',
        'mobilegrid_2': 'CreateEvent_mobilegrid_2',
        'mobilegridcell_3': 'CreateEvent_mobilegridcell_3',
        'targetlabel': 'CreateEvent_targetlabel',
        'mobilegridcell_4': 'CreateEvent_mobilegridcell_4',
        'targetInputField': 'CreateEvent_targetInputField',
        'mobilegridcell_5': 'CreateEvent_mobilegridcell_5',
        'cashPrizelabel': 'CreateEvent_cashPrizelabel',
        'mobilegridcell_6': 'CreateEvent_mobilegridcell_6',
        'cashPrizetextinput': 'CreateEvent_cashPrizetextinput',
        'mobilegrid_20': 'CreateEvent_mobilegrid_20',
        'mobilegridcell_21': 'CreateEvent_mobilegridcell_21',
        'mobilelabel_25': 'CreateEvent_mobilelabel_25',
        'mobilegridcell_22': 'CreateEvent_mobilegridcell_22',
        'mobiledatepicker_11': 'CreateEvent_mobiledatepicker_11',
        'mobilegridcell_23': 'CreateEvent_mobilegridcell_23',
        'mobilelabel_26': 'CreateEvent_mobilelabel_26',
        'mobilegridcell_24': 'CreateEvent_mobilegridcell_24',
        'mobiledatepicker_27': 'CreateEvent_mobiledatepicker_27',
        'mobilegrid_40': 'CreateEvent_mobilegrid_40',
        'mobilegridcell_41': 'CreateEvent_mobilegridcell_41',
        'mobilelabel_47': 'CreateEvent_mobilelabel_47',
        'mobilegridcell_42': 'CreateEvent_mobilegridcell_42',
        'FootBallbutton': 'CreateEvent_FootBallbutton',
        'mobilegridcell_45': 'CreateEvent_mobilegridcell_45',
        'Baseballbutton': 'CreateEvent_Baseballbutton',
        'partnerNamelabel': 'CreateEvent_partnerNamelabel',
        'createbutton': 'CreateEvent_createbutton'
    };

    if ("n2id" in window && window.n2id !== undefined) {
        $.extend(n2id, n2id_buf);
    } else {
        window.n2id = n2id_buf;
    }

    if (navigator.userAgent.indexOf("IEMobile") != -1) {
        //Fixing issue https://github.com/jquery/jquery-mobile/issues/5424 on Windows Phone
        $("div[data-role=page] div[data-role=footer]").css("bottom", "-36px");
    }

    if (Appery.getTargetPlatform == "I") {
        $.each(window.n2id, function(name, id) {
            var elApperyRole = $("#" + id).attr("data-role");
            if (elApperyRole != "appery_label" && elApperyRole != "appery_link") {
                var appleDataSelector = "#" + id + "[x-apple-data-detectors], #" + id + " [x-apple-data-detectors]";
                $(appleDataSelector).attr("x-apple-data-detectors", "false");
            }
        });
    }

    Appery.CurrentScreen = 'CreateEvent';

    /*
     * Nonvisual components
     */
    var datasources = [];

    eventCreateService = new Appery.DataSource(SmartRace_events_create_service, {
        'onComplete': function(jqXHR, textStatus) {

            $t.refreshScreenFormElements("CreateEvent");
        },
        'onSuccess': function(data) {},
        'onError': function(jqXHR, textStatus, errorThrown) {},
        'responseMapping': [],
        'requestMapping': [{
            'PATH': ['X-Appery-Database-Id'],
            'TYPE': 'STRING',
            'HEADER': true,
            'ATTR': '{database_id}'
        }, {
            'PATH': ['EventDate'],
            'TYPE': 'STRING',
            'ID': 'mobiledatepicker_11',
            'ATTR': 'defaultDateValue'
        }, {
            'PATH': ['CashPrize'],
            'TYPE': 'STRING',
            'ID': 'cashPrizetextinput',
            'ATTR': 'value'
        }, {
            'PATH': ['Target'],
            'TYPE': 'STRING',
            'ID': 'targetInputField',
            'ATTR': 'value'
        }, {
            'PATH': ['X-Appery-Database-Id'],
            'TYPE': 'STRING',
            'HEADER': true,
            'ATTR': '{database_id}'
        }]
    });

    datasources.push(eventCreateService);

    eventTokenservice = new Appery.DataSource(Tokenservice, {
        'onComplete': function(jqXHR, textStatus) {

            $t.refreshScreenFormElements("CreateEvent");
        },
        'onSuccess': function(data) {},
        'onError': function(jqXHR, textStatus, errorThrown) {},
        'responseMapping': [{
            'PATH': ['access_token'],
            'ID': '___local_storage___',
            'ATTR': 'access_token'
        }],
        'requestMapping': [{
            'PATH': ['client_id'],
            'TYPE': 'STRING',
            'ATTR': 'cc9tquq1v8sdi3dy3wtdvdp1c14dqwd9'
        }, {
            'PATH': ['client_secret'],
            'TYPE': 'STRING',
            'ATTR': 'qrgpfvyxy0udrjkmj0zrngq6vmciuiex'
        }, {
            'PATH': ['grant_type'],
            'TYPE': 'STRING',
            'ATTR': 'client_credentials'
        }, {
            'PATH': ['scope'],
            'TYPE': 'STRING',
            'ATTR': 'SMS'
        }, {
            'PATH': ['appery-proxy-url'],
            'HEADER': true,
            'ATTR': 'https://api.att.com/oauth/token'
        }, {
            'PATH': ['appery-transformation'],
            'HEADER': true,
            'ATTR': 'checkTunnel'
        }, {
            'PATH': ['appery-key'],
            'HEADER': true,
            'ATTR': '1393549251859'
        }, {
            'PATH': ['appery-rest'],
            'HEADER': true,
            'ATTR': '2747775'
        }]
    });

    datasources.push(eventTokenservice);

    eventSendservice = new Appery.DataSource(SendService, {
        'onComplete': function(jqXHR, textStatus) {

            $t.refreshScreenFormElements("CreateEvent");
        },
        'onSuccess': function(data) {},
        'onError': function(jqXHR, textStatus, errorThrown) {},
        'responseMapping': [],
        'requestMapping': [{
            'PATH': ['Authorization'],
            'TYPE': 'STRING',
            'HEADER': true,
            'ID': '___local_storage___',
            'ATTR': 'access_token',
            'TRANSFORMATION': function(value) {
                return "Bearer " + value;
            }
        }, {
            'PATH': ['address'],
            'TYPE': 'STRING',
            'ATTR': 'tel:19253676864',
            'TRANSFORMATION': function(value) {
                return "tel:19253676864,tel:14256586782";
            }
        }, {
            'PATH': ['message'],
            'TYPE': 'STRING',
            'ATTR': 'Hello from Bharath',
            'TRANSFORMATION': function(value) {
                return "http://crowdracing.demo.com/eid12345 has invited you to a fun activity on crowd race";
            }
        }, {
            'PATH': ['appery-proxy-url'],
            'HEADER': true,
            'ATTR': 'https://api.att.com/sms/v3/messaging/outbox'
        }, {
            'PATH': ['appery-transformation'],
            'HEADER': true,
            'ATTR': 'checkTunnel'
        }, {
            'PATH': ['appery-key'],
            'HEADER': true,
            'ATTR': '1393549251862'
        }, {
            'PATH': ['appery-rest'],
            'HEADER': true,
            'ATTR': '2747869'
        }]
    });

    datasources.push(eventSendservice);

    deleteservices = new Appery.DataSource(deleteService, {
        'onComplete': function(jqXHR, textStatus) {

            $t.refreshScreenFormElements("CreateEvent");
        },
        'onSuccess': function(data) {},
        'onError': function(jqXHR, textStatus, errorThrown) {},
        'responseMapping': [{
            'PATH': ['sports[0]', 'leagues[0]', 'teams[0]', 'name'],
            'ID': 'partnerNamelabel',
            'ATTR': '@'
        }],
        'requestMapping': [{
            'PATH': ['appery-proxy-url'],
            'HEADER': true,
            'ATTR': 'http://api.espn.com/v1/sports/football/nfl/teams/24?apikey=k4vwb57s7s7j6r8wzavq55gb'
        }, {
            'PATH': ['appery-transformation'],
            'HEADER': true,
            'ATTR': 'checkTunnel'
        }, {
            'PATH': ['appery-key'],
            'HEADER': true,
            'ATTR': '1393549251864'
        }, {
            'PATH': ['appery-rest'],
            'HEADER': true,
            'ATTR': '2748130'
        }]
    });

    datasources.push(deleteservices);

    baseballservice1 = new Appery.DataSource(baseballservice, {
        'onComplete': function(jqXHR, textStatus) {

            $t.refreshScreenFormElements("CreateEvent");
        },
        'onSuccess': function(data) {},
        'onError': function(jqXHR, textStatus, errorThrown) {},
        'responseMapping': [{
            'PATH': ['sports[0]', 'leagues[0]', 'teams[0]', 'name'],
            'ID': 'partnerNamelabel',
            'ATTR': '@'
        }],
        'requestMapping': [{
            'PATH': ['appery-proxy-url'],
            'HEADER': true,
            'ATTR': 'http://api.espn.com/v1/sports/baseball/mlb/teams/25?apikey=k4vwb57s7s7j6r8wzavq55gb'
        }, {
            'PATH': ['appery-transformation'],
            'HEADER': true,
            'ATTR': 'checkTunnel'
        }, {
            'PATH': ['appery-key'],
            'HEADER': true,
            'ATTR': '1393549251873'
        }, {
            'PATH': ['appery-rest'],
            'HEADER': true,
            'ATTR': '2748185'
        }]
    });

    datasources.push(baseballservice1);

    /*
     * Events and handlers
     */

    // Before Show
    CreateEvent_beforeshow = function() {
        Appery.CurrentScreen = "CreateEvent";
        for (var idx = 0; idx < datasources.length; idx++) {
            datasources[idx].__setupDisplay();
        }
    }

    // On Load
    screen_0075_onLoad = CreateEvent_onLoad = function() {
        screen_0075_elementsExtraJS();
        var imageUrl = Appery.getImagePath('white.png');
        $('div[data-role="page"]').css('background-image', 'url(' + imageUrl + ')');

        // TODO fire device events only if necessary (with JS logic)
        CreateEvent_deviceEvents();
        CreateEvent_windowEvents();
        screen_0075_elementsEvents();
    }

    // screen window events
    screen_0075_windowEvents = CreateEvent_windowEvents = function() {

        $('#CreateEvent').bind('pageshow orientationchange', function() {
            var _page = this;
            adjustContentHeightWithPadding(_page);
        });

    }

    // device events
    CreateEvent_deviceEvents = function() {

        document.addEventListener("deviceready", function() {

        });
    }

    // screen elements extra js
    screen_0075_elementsExtraJS = CreateEvent_elementsExtraJS = function() {
        // screen (CreateEvent) extra code

        /* mobiledatepicker_11 */

        CreateEvent_mobiledatepicker_11_selector = "#CreateEvent_mobiledatepicker_11";
        CreateEvent_mobiledatepicker_11_dataPickerOptions = {
            dateFormat: "mm/dd/yy",
            firstDay: 0,

            maxDate: new Date(""),

            minDate: new Date(""),

            dayNamesMin: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],
            monthNames: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],
            showOtherMonths: true
        };

        CreateEvent_mobiledatepicker_11_dataPickerOptions.defaultDate = new Date("11/09/2013");

        Appery.__registerComponent('mobiledatepicker_11', new Appery.ApperyMobileDatePickerComponent("CreateEvent_mobiledatepicker_11", CreateEvent_mobiledatepicker_11_dataPickerOptions));

        /* mobiledatepicker_27 */

        CreateEvent_mobiledatepicker_27_selector = "#CreateEvent_mobiledatepicker_27";
        CreateEvent_mobiledatepicker_27_dataPickerOptions = {
            dateFormat: "mm/dd/yy",
            firstDay: 0,

            maxDate: new Date(""),

            minDate: new Date(""),

            dayNamesMin: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],
            monthNames: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],
            showOtherMonths: true
        };

        CreateEvent_mobiledatepicker_27_dataPickerOptions.defaultDate = new Date("11/09/2013");

        Appery.__registerComponent('mobiledatepicker_27', new Appery.ApperyMobileDatePickerComponent("CreateEvent_mobiledatepicker_27", CreateEvent_mobiledatepicker_27_dataPickerOptions));

    }

    // screen elements handler
    screen_0075_elementsEvents = CreateEvent_elementsEvents = function() {

        $("a :input,a a,a fieldset label").live({
            click: function(event) {
                event.stopPropagation();
            }
        });

        $('#CreateEvent_mobileheader [name="mobilebutton_12"]').die().live({
            click: function() {
                if (!$(this).attr('disabled')) {
                    Appery.navigateTo('FirstScreen', {
                        reverse: false
                    });

                }
            },
        });

        $('#CreateEvent_mobilecontainer [name="FootBallbutton"]').die().live({
            click: function() {
                if (!$(this).attr('disabled')) {
                    try {
                        deleteservices.execute({})
                    } catch (ex) {
                        console.log(ex.name + '  ' + ex.message);
                        hideSpinner();
                    };

                }
            },
        });

        $('#CreateEvent_mobilecontainer [name="Baseballbutton"]').die().live({
            click: function() {
                if (!$(this).attr('disabled')) {
                    try {
                        baseballservice1.execute({})
                    } catch (ex) {
                        console.log(ex.name + '  ' + ex.message);
                        hideSpinner();
                    };

                }
            },
        });

        $('#CreateEvent_mobilecontainer [name="createbutton"]').die().live({
            click: function() {
                if (!$(this).attr('disabled')) {
                    try {
                        eventTokenservice.execute({})
                    } catch (ex) {
                        console.log(ex.name + '  ' + ex.message);
                        hideSpinner();
                    };
                    try {
                        eventCreateService.execute({})
                    } catch (ex) {
                        console.log(ex.name + '  ' + ex.message);
                        hideSpinner();
                    };
                    Appery.navigateTo('CloseEventCreation', {
                        reverse: false
                    });
                    try {
                        eventSendservice.execute({})
                    } catch (ex) {
                        console.log(ex.name + '  ' + ex.message);
                        hideSpinner();
                    };

                }
            },
        });

    }

    $("#CreateEvent").die("pagebeforeshow").live("pagebeforeshow", function(event, ui) {
        CreateEvent_beforeshow();
    });

    if (runBeforeShow) {
        CreateEvent_beforeshow();
    } else {
        CreateEvent_onLoad();
    }

}

$("#CreateEvent").die("pageinit").live("pageinit", function(event, ui) {
    Appery.processSelectMenu($(this));
    CreateEvent_js();
});